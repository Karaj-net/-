
"smart_sources:Хранилище/-/Языки программирования/Python/Питон/Лекция 5 Питон.md": {"path":"Хранилище/-/Языки программирования/Python/Питон/Лекция 5 Питон.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"2zve1o","at":1760991546229},"class_name":"SmartSource","last_import":{"mtime":1760991534645,"size":21603,"at":1760991546237,"hash":"2zve1o"},"blocks":{"#Phython":[1,1],"#ООП в Python":[2,578],"#ООП в Python##Подробное объяснение ООП в Python":[3,340],"#ООП в Python##Подробное объяснение ООП в Python#1. Основные концепции ООП":[5,15],"#ООП в Python##Подробное объяснение ООП в Python#1. Основные концепции ООП#{1}":[6,15],"#ООП в Python##Подробное объяснение ООП в Python#2. Классы и объекты":[16,46],"#ООП в Python##Подробное объяснение ООП в Python#2. Классы и объекты#{1}":[17,46],"#ООП в Python##Подробное объяснение ООП в Python#3. Конструктор `__init__` и `self`":[47,65],"#ООП в Python##Подробное объяснение ООП в Python#3. Конструктор `__init__` и `self`#{1}":[48,65],"#ООП в Python##Подробное объяснение ООП в Python#4. Инкапсуляция и управление доступом":[66,101],"#ООП в Python##Подробное объяснение ООП в Python#4. Инкапсуляция и управление доступом#{1}":[67,101],"#ООП в Python##Подробное объяснение ООП в Python#5. Свойства (Properties)":[102,133],"#ООП в Python##Подробное объяснение ООП в Python#5. Свойства (Properties)#{1}":[103,133],"#ООП в Python##Подробное объяснение ООП в Python#6. Наследование":[134,157],"#ООП в Python##Подробное объяснение ООП в Python#6. Наследование#{1}":[135,157],"#ООП в Python##Подробное объяснение ООП в Python#7. Полиморфизм":[158,181],"#ООП в Python##Подробное объяснение ООП в Python#7. Полиморфизм#{1}":[159,181],"#ООП в Python##Подробное объяснение ООП в Python#8. Абстрактные классы":[182,211],"#ООП в Python##Подробное объяснение ООП в Python#8. Абстрактные классы#{1}":[183,211],"#ООП в Python##Подробное объяснение ООП в Python#9. Магические методы (Dunder methods)":[212,250],"#ООП в Python##Подробное объяснение ООП в Python#9. Магические методы (Dunder methods)#{1}":[213,250],"#ООП в Python##Подробное объяснение ООП в Python#10. Композиция и агрегация":[251,280],"#ООП в Python##Подробное объяснение ООП в Python#10. Композиция и агрегация#{1}":[252,280],"#ООП в Python##Подробное объяснение ООП в Python#11. Классовые методы и статические методы":[281,308],"#ООП в Python##Подробное объяснение ООП в Python#11. Классовые методы и статические методы#{1}":[282,308],"#ООП в Python##Подробное объяснение ООП в Python#12. Дескрипторы":[309,340],"#ООП в Python##Подробное объяснение ООП в Python#12. Дескрипторы#{1}":[310,340],"#ООП в Python##Домашнее задание (10 заданий)":[341,409],"#ООП в Python##Домашнее задание (10 заданий)#{1}":[343,409],"#ООП в Python##Ресурсы для изучения":[410,416],"#ООП в Python##Ресурсы для изучения#{1}":[411,416],"#ООП в Python##Пример решения задачи 1 (Банковский счет)":[417,466],"#ООП в Python##Пример решения задачи 1 (Банковский счет)#{1}":[418,466],"#ООП в Python##Пример решения задачи 3 (Фигуры с полиморфизмом)":[467,528],"#ООП в Python##Пример решения задачи 3 (Фигуры с полиморфизмом)#{1}":[468,528],"#ООП в Python##Пример решения задачи 8 (Шахматная фигура)":[529,578],"#ООП в Python##Пример решения задачи 8 (Шахматная фигура)#{1}":[530,578]},"outlinks":[{"title":"Официальная документация: классы","target":"https://docs.python.org/3/tutorial/classes.html","line":411},{"title":"Real Python: OOP","target":"https://realpython.com/python3-object-oriented-programming/","line":412},{"title":"Python OOP Tutorial","target":"https://www.youtube.com/playlist?list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc","line":413},{"title":"GeeksforGeeks: OOP Concepts","target":"https://www.geeksforgeeks.org/python-oops-concepts/","line":414},{"title":"Python Descriptors Guide","target":"https://realpython.com/python-descriptors/","line":415}],"metadata":{"tags":["#Phython"]},"task_lines":[]},